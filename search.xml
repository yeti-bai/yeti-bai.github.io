<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机基础和环境搭配</title>
      <link href="/2023/01/14/day1%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/01/14/day1%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机基础和环境搭配"><a href="#计算机基础和环境搭配" class="headerlink" title="计算机基础和环境搭配"></a>计算机基础和环境搭配</h1><p>课程目标：了解计算机的基础知识并完成python的环境搭配</p><p>课程概要：</p><ul><li>计算机基础</li><li>编程的本质</li><li>python的介绍</li><li>python环境的搭建</li></ul><h2 id="1-计算机基础"><a href="#1-计算机基础" class="headerlink" title="1.计算机基础"></a>1.计算机基础</h2><h3 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h3><ul><li>计算机的组成</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">计算机是由多个硬件组成而成的，常见的硬件有：CPU、硬盘、内存、网卡、显示器、机箱、电源....</span><br><span class="line">注意事项：机械的将零件组合在一起，他们之间是无法进行协作的。</span><br></pre></td></tr></table></figure><ul><li>操作系统</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">用于协调计算机的各个硬件，让硬件之间进行协同工作，以完成某个目标。</span><br><span class="line">常见的操作系统分类：</span><br><span class="line">- windows，优点：生态厉害，工具多；缺点：略慢，收费。【个人】</span><br><span class="line">    - xp</span><br><span class="line">    - win7</span><br><span class="line">    - win10</span><br><span class="line">    ...</span><br><span class="line">- linux, 优点：资源占用少，免费（很多公司的服务器安装liunx）;缺点： 工具少，告别游戏。【企业的服务器】</span><br><span class="line">    - centos</span><br><span class="line">    - ubuntu</span><br><span class="line">    - redhat</span><br><span class="line">    ...</span><br><span class="line">- mac, 优点：生态还行，工具差不多都有，用户体验和交互；缺点：不能玩游戏</span><br></pre></td></tr></table></figure><ul><li>软件（应用程序）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在安装上操作系统之后，我们会在之间的计算机上安装一些常用的软件，例如：QQ，杀毒，微信...</span><br><span class="line"></span><br><span class="line">问题来了：这些软件是由谁开发的？是由各大公司的程序员开发的。</span><br><span class="line"></span><br><span class="line">以后你肯定是写“软件”的，可以把软件理解成为一大堆代码的集合。</span><br></pre></td></tr></table></figure><h3 id="1-2编程语言"><a href="#1-2编程语言" class="headerlink" title="1.2编程语言"></a>1.2编程语言</h3><p>软件，是由程序员使用 编程语言 开发出来的 一大堆代码的集合。（全球的编程语言有2500+种）例如：java、c#、Python、PHP、C、C++…</p><p>作文，是由小学生使用 汉语&#x2F;英语&#x2F;法语&#x2F;日语 …写出来一大堆文字的集合。</p><p>本质上学习编程语言就是学习它的语法，根据语法再去编写相应的软件中的功能。</p><ul><li>Python语言中输出的语法规则</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello World&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>Golang语言中输出的语法规则</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fmt.<span class="built_in">println</span>(<span class="string">&quot;Hello World&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="1-3编译器-x2F-解释器"><a href="#1-3编译器-x2F-解释器" class="headerlink" title="1.3编译器&#x2F;解释器"></a>1.3编译器&#x2F;解释器</h3><p>编译器&#x2F;解释器，就是一个翻译官，将代码翻译成计算机能够识别的命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A 使用Python开发了一个软件                       B 使用Golang开发了一个软件</span><br><span class="line"></span><br><span class="line">     Python解释器                                   Golang编译器</span><br><span class="line">          </span><br><span class="line">                    操      作      系       统</span><br><span class="line"></span><br><span class="line">                 CPU    硬盘    网卡    内存    电源...</span><br></pre></td></tr></table></figure><p>为什么有的叫解释器？有的叫编译器？</p><ul><li>解释器，实时翻译 ，拿到1000行代码之后，解释一句交给操作系统一句。</li><li>编译器，全文翻译，拿到1000行代码之后会将它编译成一个临时文件（计算机能够识别的命令），再把文件交给操作系统去读取</li></ul><p>Python、PHP、JavaScript、Ruby…一般称为解释型语言。</p><p>C、C++、Go、Java…一般称为编译型语言。</p><h2 id="2-学习编程的本质"><a href="#2-学习编程的本质" class="headerlink" title="2.学习编程的本质"></a>2.学习编程的本质</h2><ul><li>选择一门语言，在自己的电脑上安装此编程语言相关的 编译器&#x2F;解释器</li><li>学习编程语言的语法规则，根据语法规则 + 业务背景 设计并开发你的软件（代码集合）</li><li>使用 编译器&#x2F;解释器 去运行自己写的代码</li></ul><h2 id="3-Python的介绍"><a href="#3-Python的介绍" class="headerlink" title="3.Python的介绍"></a>3.Python的介绍</h2><h3 id="3-1语言的分类"><a href="#3-1语言的分类" class="headerlink" title="3.1语言的分类"></a>3.1语言的分类</h3><ul><li><p>“翻译”的维度</p></li><li><p>解释型语言，Python、Ruby</p></li><li><p>编译型语言，C、C++、Golang</p></li><li><p>“高低”的维度</p></li><li><p>低级编程语言，写出来的代码可以直接被计算机识别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">机器语言，101 110 001 0001 0001 0001001，机器码，交给计算机去执行</span><br><span class="line">汇编语言，MOV INC ... 指令，交给计算机去执行</span><br></pre></td></tr></table></figure></li><li><p>高级编程i语言，写出来的代码不可以直接被计算机识别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C、C++、Java、Ruby...这类编程语言在编写代码是几乎是写英语作文</span><br><span class="line">交由相关的编译器或解释器翻译成机器码，然后再交给计算机执行</span><br></pre></td></tr></table></figure></li></ul><p>注意：现在基本上都使用高级编程语言。</p><h3 id="3-2Python"><a href="#3-2Python" class="headerlink" title="3.2Python"></a>3.2Python</h3><p>Python火爆的原因如下：</p><ul><li>语法简洁 &amp; 适合小白</li><li>类库强大</li><li>开发效率高</li></ul><h3 id="3-3Python的解释器的种类"><a href="#3-3Python的解释器的种类" class="headerlink" title="3.3Python的解释器的种类"></a>3.3Python的解释器的种类</h3><p>想要学习一门编程语言： 安装Python解释器、学习Python语法并编写代码、使用Python解释器去执行编写好的代码</p><p>Python在全球非常的火爆，很多公司都想要来蹭热度</p><p>由于Python太火了，所有就有很多公司都开发了Python解释器（用来翻译Python代码成为计算机能够是别的命令）</p><ul><li>CPython【主流】，底层是由C语言开发出来的Python解释器</li><li>JPython,是由Java语言开发出来的Python解释器，方便与Python和Java代码做集成</li><li>LronPython，是由C#语言开发出来的Python解释器，方便与Python和C#代码做集成</li><li>PyPy,是对Python的优化，他的执行效率提高了，引入编译器的功能，本质上讲Python代码进行编译，再去执行编译后代码</li><li>…</li></ul><p>注意：常说的Python解释器默认指的就是CPython解释器</p><h3 id="3-4CPython解释器的版本"><a href="#3-4CPython解释器的版本" class="headerlink" title="3.4CPython解释器的版本"></a>3.4CPython解释器的版本</h3><p>CPython的解释器主要有两大版本：</p><ul><li>2.x，目前最新的Python2.7.18（2020年后不再维护）</li><li>3.x，目前最新的Python3.9.0</li></ul><h1 id="4-Python环境搭建"><a href="#4-Python环境搭建" class="headerlink" title="4.Python环境搭建"></a>4.Python环境搭建</h1><h3 id="4-1安装Python解释器"><a href="#4-1安装Python解释器" class="headerlink" title="4.1安装Python解释器"></a>4.1安装Python解释器</h3><h3 id="4-2安装Python编辑器"><a href="#4-2安装Python编辑器" class="headerlink" title="4.2安装Python编辑器"></a>4.2安装Python编辑器</h3><p>帮助我们快速编写代码，用Pycharm可以大大的提高写代码的效率</p>]]></content>
      
      
      <categories>
          
          <category> python笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据类型（上）</title>
      <link href="/2023/01/14/day5-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
      <url>/2023/01/14/day5-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="day5-数据类型（上）"><a href="#day5-数据类型（上）" class="headerlink" title="day5 数据类型（上）"></a>day5 数据类型（上）</h1><p>常见的数据类型：</p><ul><li>int，整数类型（整型）</li><li>bool，布尔类型</li><li>str，字符串类型</li><li>list，列表类型</li><li>tuple，元组类型</li><li>dict，字典类型</li><li>set，集合类型</li><li>float，浮点类型（浮点型）</li></ul><p>每种数据类型都有自己的特点及应用场景，以后开发中需要根据实际开发情况选择合适的数据类型。</p><p><img src="C:\Users\BAIYINSHUAI\AppData\Roaming\Typora\typora-user-images\image-20220111095212776.png" alt="image-20220111095212776"></p><p>每种数据类型的讲解，会按照以下4个维度来进行：</p><ol><li>定义</li><li>独有功能</li><li>公共功能</li><li>类型转换</li><li>其他</li></ol><p>概要：</p><ul><li>整型</li><li>布尔类型</li><li>字符串类型</li></ul><h2 id="1-整型"><a href="#1-整型" class="headerlink" title="1.整型"></a>1.整型</h2><p>整型其实就是十进制整数的统称，比如：1、68、999都属于整型，一般用于表示 年龄、序号等。</p><h3 id="1-1定义"><a href="#1-1定义" class="headerlink" title="1.1定义"></a>1.1定义</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="number">10</span></span><br><span class="line">age = <span class="number">99</span></span><br></pre></td></tr></table></figure><h3 id="1-2独有功能"><a href="#1-2独有功能" class="headerlink" title="1.2独有功能"></a>1.2独有功能</h3><p>无</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bin</span>(v1))  <span class="comment"># 0b101</span></span><br><span class="line"><span class="comment"># 调用v1(int)的独有功能，获取v1的二进制有多少个位组成</span></span><br><span class="line">result1 = v1.bit_length()</span><br><span class="line"><span class="built_in">print</span>(result1)  <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line">v2 = <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bin</span>(v2))  <span class="comment"># 0b1010</span></span><br><span class="line"><span class="comment"># 调用v2(int)的独有功能，获取v2的二进制有多少个位组成</span></span><br><span class="line">result2 = v2.bit_length()</span><br><span class="line"><span class="built_in">print</span>(result2)  <span class="comment"># 4</span></span><br></pre></td></tr></table></figure><h3 id="1-3公共功能"><a href="#1-3公共功能" class="headerlink" title="1.3公共功能"></a>1.3公共功能</h3><p>加减乘除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="number">4</span></span><br><span class="line">v2 = <span class="number">8</span></span><br><span class="line">v3 = v1 + v2</span><br></pre></td></tr></table></figure><h3 id="1-4转换"><a href="#1-4转换" class="headerlink" title="1.4转换"></a>1.4转换</h3><p>在项目开发和面试题中经常会出现一些 ”字符串“ 和 ”布尔值“ 转换为 整型 的情况。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 布尔值转整型</span></span><br><span class="line">n1 = <span class="built_in">int</span>(<span class="literal">True</span>)  <span class="comment"># True转换为整型 1</span></span><br><span class="line">n2 = <span class="built_in">int</span>(<span class="literal">False</span>)  <span class="comment"># False转换为整型 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串转整型</span></span><br><span class="line">v1 = <span class="built_in">int</span>(<span class="string">&quot;186&quot;</span>,base=<span class="number">10</span>)  <span class="comment"># 把字符串看成十进制的值，然后再转换为 十进制 整数，结果：v1 = 186</span></span><br><span class="line">v1 = <span class="built_in">int</span>(<span class="string">&quot;0b1001&quot;</span>,base=<span class="number">2</span>)  <span class="comment"># 把字符串看成二进制的值，然后再转换为 十进制 整数，结果：v1 = 9</span></span><br><span class="line">v1 = <span class="built_in">int</span>(<span class="string">&quot;0o144&quot;</span>,base=<span class="number">8</span>)  <span class="comment"># 把字符串看成八进制的值，然后再转换为 十进制 整数，结果：v1 = 100</span></span><br><span class="line">v1 = <span class="built_in">int</span>(<span class="string">&quot;0x59&quot;</span>,base=<span class="number">16</span>)  <span class="comment"># 把字符串看成十六进制的值，然后再转换为 十进制 整数，结果：v1 = 89</span></span><br></pre></td></tr></table></figure><p>所以，如果以后别人给你一个按 二进制、八进制、十进制、十六进制 规则存储的字符串时，可以轻松的通过int转换为十进制的整型。、</p><h3 id="1-5其他"><a href="#1-5其他" class="headerlink" title="1.5其他"></a>1.5其他</h3><h4 id="1-5-1长整型"><a href="#1-5-1长整型" class="headerlink" title="1.5.1长整型"></a>1.5.1长整型</h4><ul><li>python3：整型</li><li>python2：整型、长整型</li></ul><p>在python2中跟整型相关的数据类型有两种：int（整型）、long（长整型），他们都是整数只不过能表示值的范围不同</p><p><img src="/assets/image-20220111105016672.png" alt="image-20220111105016672"></p><ul><li>int，可表示的范围：-9223372036854775808~9223372036854775807</li><li>long，整型值超出int范围之后会自动转换为long类型（无限制）</li></ul><p>在python3中去除了long只剩下：int（整型），并且int长度不再限制</p><h4 id="1-5-2地板除"><a href="#1-5-2地板除" class="headerlink" title="1.5.2地板除"></a>1.5.2地板除</h4><ul><li><p>python3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="number">9</span>/<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(v1)  <span class="comment"># 4.5</span></span><br></pre></td></tr></table></figure></li><li><p>python2:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="number">9</span>/<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(v1)  <span class="comment"># 4</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> _future_ <span class="keyword">import</span> division</span><br><span class="line"></span><br><span class="line">v1 = <span class="number">9</span>/<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(v1)  <span class="comment"># 4.5</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2-布尔类型"><a href="#2-布尔类型" class="headerlink" title="2.布尔类型"></a>2.布尔类型</h2><p>布尔值，其实就是”真”、”假”</p><h3 id="2-1定义"><a href="#2-1定义" class="headerlink" title="2.1定义"></a>2.1定义</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="literal">True</span></span><br><span class="line">bai_xiao = <span class="literal">False</span></span><br></pre></td></tr></table></figure><h3 id="2-2独有功能"><a href="#2-2独有功能" class="headerlink" title="2.2独有功能"></a>2.2独有功能</h3><p>无</p><h3 id="2-3公共功能"><a href="#2-3公共功能" class="headerlink" title="2.3公共功能"></a>2.3公共功能</h3><p>无</p><h3 id="2-4转换"><a href="#2-4转换" class="headerlink" title="2.4转换"></a>2.4转换</h3><p>在以后的项目开发中，会经常使用其他类型转换为布尔值的情景，只要记住一个规律即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">整型0、空字符串、空列表、空元组、空字典转换为布尔值是均为False</span><br><span class="line">其他均为True</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="built_in">bool</span>(<span class="number">0</span>) <span class="literal">False</span></span><br><span class="line">v1 = <span class="built_in">bool</span>(-<span class="number">10</span>)</span><br><span class="line">v1 = <span class="built_in">bool</span>(<span class="number">10</span>)</span><br><span class="line">v1 = <span class="built_in">bool</span>(<span class="string">&quot;小白&quot;</span>)</span><br><span class="line">v1 = <span class="built_in">bool</span>(<span class="string">&quot;&quot;</span>) <span class="literal">False</span></span><br><span class="line">v1 = <span class="built_in">bool</span>(<span class="string">&quot; &quot;</span>)</span><br><span class="line">v1 = <span class="built_in">bool</span>([]) <span class="literal">False</span></span><br><span class="line">v1 = <span class="built_in">bool</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">v1 = <span class="built_in">bool</span>(&#123;&#125;) <span class="literal">False</span></span><br><span class="line">v1 = <span class="built_in">bool</span>(&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;小白&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">18</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="2-5其他"><a href="#2-5其他" class="headerlink" title="2.5其他"></a>2.5其他</h3><h4 id="2-5-1做条件自动转换"><a href="#2-5-1做条件自动转换" class="headerlink" title="2.5.1做条件自动转换"></a>2.5.1做条件自动转换</h4><p>如果 if、while 条件后面写一个值当作条件时，他会默认转换为布尔类型，然后再做条件判断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;太棒了&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>：</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">888</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;小白&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;你好&quot;</span>)</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="number">1</span>&gt;<span class="number">9</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 值:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> 值:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h2 id="3-字符串类型"><a href="#3-字符串类型" class="headerlink" title="3.字符串类型"></a>3.字符串类型</h2><p>字符串，我们平时会用它来表示文本信息，例如：姓名、地址、自我介绍等。</p><h3 id="3-1定义"><a href="#3-1定义" class="headerlink" title="3.1定义"></a>3.1定义</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="string">&quot;包治百病&quot;</span></span><br><span class="line">v2 = <span class="string">&#x27;包治百病&#x27;</span></span><br><span class="line">v3 = <span class="string">&quot;包&#x27;治百病&quot;</span></span><br><span class="line">v4 = <span class="string">&#x27;包&quot;治百病&#x27;</span></span><br><span class="line">v5 = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">包治百病</span></span><br><span class="line"><span class="string">包治百病</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 三个引号，可以支持多行/换行表示一个字符串，其他的都只能在一行中表示一个字符串</span></span><br></pre></td></tr></table></figure><h3 id="3-2独有功能（18-x2F-48）"><a href="#3-2独有功能（18-x2F-48）" class="headerlink" title="3.2独有功能（18&#x2F;48）"></a>3.2独有功能（18&#x2F;48）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;xxxx&quot;</span>.功能(...)</span><br><span class="line"></span><br><span class="line">v1 = <span class="string">&quot;xxxx&quot;</span></span><br><span class="line">v1.功能(...)</span><br></pre></td></tr></table></figure><ol><li><p>判断字符串是否以 XX 开头？得到一个布尔值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="string">&quot;小白是个大帅锅&quot;</span></span><br><span class="line"></span><br><span class="line">result = v1.startswith(<span class="string">&quot;小白&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result) <span class="comment"># 值True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 案例</span></span><br><span class="line">v1 = <span class="built_in">input</span>(<span class="string">&quot;请输入地址：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> v1.startswith(<span class="string">&quot;北京市&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;北京市人口&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;非北京市人口&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>判断字符串是否以 XX 结尾？得到一个布尔值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="string">&quot;小白是个大帅锅&quot;</span></span><br><span class="line"></span><br><span class="line">result = v1.endswith(<span class="string">&quot;帅&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result) <span class="comment"># 值False</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 案例</span></span><br><span class="line">address = <span class="built_in">input</span>(<span class="string">&quot;请输入地址：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> address.endswith(<span class="string">&quot;村&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;农村户口&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;城市户口&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>判断字符串是否为十进制数？得到一个布尔值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="string">&quot;123456&quot;</span></span><br><span class="line">result = v1.isdecimal()</span><br><span class="line"><span class="built_in">print</span>(result) <span class="comment"># True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 案例</span></span><br><span class="line">v1 = <span class="built_in">input</span>(<span class="string">&quot;请输入值：&quot;</span>)</span><br><span class="line">v2 = <span class="built_in">input</span>(<span class="string">&quot;请输入值：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> v1.isdecimal() <span class="keyword">and</span> v2.isdecimal():</span><br><span class="line">    data = <span class="built_in">int</span>(v1) + <span class="built_in">int</span>(v2)</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入错误&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="built_in">print</span>(v1.isdecimal()) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">v2 = <span class="string">&quot;①&quot;</span></span><br><span class="line"><span class="built_in">print</span>(v2.isdecimal()) <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">v3 = <span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="built_in">print</span>(v3.isdecimal()) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">v4 = <span class="string">&quot;①&quot;</span></span><br><span class="line"><span class="built_in">print</span>(v4.isdecimal()) <span class="comment"># True</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>去除字符串两边的 空格、换行符、制表符，得到一个新字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="built_in">input</span>(<span class="string">&quot;请输入内容：&quot;</span>) <span class="comment">#小白， 小白 </span></span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msg = <span class="string">&quot; H E L L O,树哥 &quot;</span></span><br><span class="line">data = msg.strip()</span><br><span class="line"><span class="built_in">print</span>(data) <span class="comment"># 将msg两边的空白去掉，得到“H E L L O,树哥”</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msg = <span class="string">&quot; H E L L O,树哥 &quot;</span></span><br><span class="line">data = msg.lstrip()</span><br><span class="line"><span class="built_in">print</span>(data) <span class="comment"># 将msg左边的空白去掉，得到“H E L L O,树哥 ”</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msg = <span class="string">&quot; H E L L O,树哥 &quot;</span></span><br><span class="line">data = msg.rstrip()</span><br><span class="line"><span class="built_in">print</span>(data) <span class="comment"># 将msg右边的空白去掉，得到“ H E L L O,树哥”</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 案例</span></span><br><span class="line">code = <span class="built_in">input</span>(<span class="string">&quot;请输入四位验证码：&quot;</span>)</span><br><span class="line">data = code.strip()</span><br><span class="line"><span class="keyword">if</span> data == <span class="string">&quot;FB87&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;验证码正确&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;验证码错误&quot;</span>)</span><br></pre></td></tr></table></figure><p>补充：去除字符串两边指定的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msg = <span class="string">&quot;哥H E L L O,树哥&quot;</span></span><br><span class="line">data = msg.strip(<span class="string">&quot;哥&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(data) <span class="comment"># 将msg两边的内容去掉，得到“H E L L O,树”</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msg = <span class="string">&quot;哥H E L L O,树哥&quot;</span></span><br><span class="line">data = msg.lstrip(<span class="string">&quot;哥&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(data) <span class="comment"># 将msg左边的内容去掉，得到“H E L L O,树哥”</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msg = <span class="string">&quot;哥H E L L O,树哥&quot;</span></span><br><span class="line">data = msg.rstrip(<span class="string">&quot;哥&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(data) <span class="comment"># 将msg右边的内容去掉，得到“哥H E L L O,树”</span></span><br></pre></td></tr></table></figure></li><li><p>字符串变大写，得到一个新字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msg = <span class="string">&quot;my name is oliver queen&quot;</span></span><br><span class="line">data = msg.upper()</span><br><span class="line"><span class="built_in">print</span>(msg) <span class="comment"># 输出：my name is oliver queen</span></span><br><span class="line"><span class="built_in">print</span>(data) <span class="comment"># 输出：MY NAME IS OLIVER QUEEN</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 案例</span></span><br><span class="line">code = <span class="built_in">input</span>(<span class="string">&quot;请输入四位验证码：&quot;</span>)</span><br><span class="line">data = code.strip()</span><br><span class="line">value = data.upper()</span><br><span class="line"><span class="comment"># value = code.strip().upper()</span></span><br><span class="line"><span class="keyword">if</span> value == <span class="string">&quot;FB87&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;验证码正确&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;验证码错误&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>字符串变小写，得到一个新的字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msg = <span class="string">&quot;MY NAME IS OLIVER QUEEN&quot;</span></span><br><span class="line">data = msg.lower()</span><br><span class="line"><span class="built_in">print</span>(msg) <span class="comment"># 输出：MY NAME IS OLIVER QUEEN</span></span><br><span class="line"><span class="built_in">print</span>(data) <span class="comment"># 输出：my name is oliver queen</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">code = <span class="built_in">input</span>(<span class="string">&quot;请输入四位验证码：&quot;</span>)</span><br><span class="line">data = code.strip()</span><br><span class="line">value = data.lower()</span><br><span class="line"><span class="comment"># value = code.strip().lower()</span></span><br><span class="line"><span class="keyword">if</span> value == <span class="string">&quot;fb87&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;验证码正确&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;验证码错误&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>字符串内容替换，得到一个新的字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&quot;你是一个好人，但好人不适合我&quot;</span></span><br><span class="line">value = data.replace(<span class="string">&quot;好人&quot;</span>，<span class="string">&quot;贱人&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(data) <span class="comment"># 你是一个好人，但好人不适合我</span></span><br><span class="line"><span class="built_in">print</span>(value)  <span class="comment"># 你是一个贱人，但贱人不适合我</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 案例</span></span><br><span class="line">video_file_name = <span class="string">&quot;高清无码爱情动作片.mp4&quot;</span></span><br><span class="line"></span><br><span class="line">new_file_name = video_file_name.replace(<span class="string">&quot;mp4&quot;</span>, <span class="string">&quot;avi&quot;</span>)  <span class="comment"># 高清无码爱情动作片.avi</span></span><br><span class="line"></span><br><span class="line">final_file_name = new_file_name.replace(<span class="string">&quot;无码&quot;</span>, <span class="string">&quot;步兵&quot;</span>)  <span class="comment"># 高清步兵爱情动作片.avi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(final_file_name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 案例</span></span><br><span class="line">video_file_name = <span class="string">&quot;高清无码爱情动作片.mp4&quot;</span></span><br><span class="line"></span><br><span class="line">new_file_name = video_file_name.replace(<span class="string">&quot;mp4&quot;</span>, <span class="string">&quot;avi&quot;</span>)  <span class="comment"># 高清无码爱情动作片.avi</span></span><br><span class="line"></span><br><span class="line">final_file_name = video_file_name.replace(<span class="string">&quot;无码&quot;</span>, <span class="string">&quot;步兵&quot;</span>)  <span class="comment"># 高清步兵爱情动作片.mp4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(final_file_name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 案例</span></span><br><span class="line">content = <span class="built_in">input</span>(<span class="string">&quot;请输入评论信息&quot;</span>)</span><br><span class="line">content = content.replace(<span class="string">&quot;草&quot;</span>, <span class="string">&quot;**&quot;</span>)</span><br><span class="line">content = content.replace(<span class="string">&quot;泥马&quot;</span>, <span class="string">&quot;***&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(content)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">char_list = [<span class="string">&quot;草泥马&quot;</span>, <span class="string">&quot;傻逼&quot;</span>]</span><br><span class="line"></span><br><span class="line">content = <span class="built_in">input</span>(<span class="string">&quot;请输入评论信息：&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> char_list:</span><br><span class="line">    content = content.replace(<span class="string">&quot;item&quot;</span>, <span class="string">&quot;**&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(content)</span><br></pre></td></tr></table></figure></li><li><p>字符串的切割，得到一个列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&quot;小白|root|xiaobai@qq.com&quot;</span></span><br><span class="line">result = data.split(<span class="string">&#x27;|&#x27;</span>)  <span class="comment"># [&#x27;小白&#x27;, &#x27;root&#x27;, &#x27;xiaobai@qq.com&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(data)  <span class="comment"># 小白|root|xiaobai@qq.com</span></span><br><span class="line"><span class="built_in">print</span>(result)  <span class="comment"># 输入 [&#x27;小白&#x27;, &#x27;root&#x27;, &#x27;xiaobai@qq.com&#x27;] 根据特定字符切割之后保存在列表中，方便以后的操作</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 案例: 判断用户名密码是否正确</span></span><br><span class="line">info = <span class="string">&quot;小白,root&quot;</span></span><br><span class="line">user_list = info.split(<span class="string">&#x27;,&#x27;</span>)  <span class="comment"># 得到一个包含了两个元素的列表 [&#x27;小白&#x27;, &#x27;root&#x27;] </span></span><br><span class="line">user = <span class="built_in">input</span>(<span class="string">&quot;请输入用户名：&quot;</span>)  </span><br><span class="line">pwd = <span class="built_in">input</span>(<span class="string">&quot;请输入密码：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> user == user_list[<span class="number">0</span>] <span class="keyword">and</span> pwd == user_list[<span class="number">1</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;登陆成功&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;用户名或密码错误&quot;</span>)</span><br></pre></td></tr></table></figure><p>扩展</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&quot;小白|root|xiaobai@qq.com&quot;</span></span><br><span class="line">v1 = data.split(<span class="string">&#x27;|&#x27;</span>)  <span class="comment"># [&#x27;小白&#x27;, &#x27;root&#x27;, &#x27;xiaobai@qq.com&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(v1)</span><br><span class="line">v2 = data.split(<span class="string">&#x27;|&#x27;</span>, <span class="number">1</span>)  <span class="comment"># [&#x27;小白&#x27;, &#x27;root|xiaobai@qq.com&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(v2)</span><br></pre></td></tr></table></figure><p>再扩展（从右到左）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&quot;小白|root|xiaobai@qq.com&quot;</span></span><br><span class="line">v1 = data.rsplit(<span class="string">&#x27;|&#x27;</span>)  <span class="comment"># [&#x27;小白&#x27;, &#x27;root&#x27;, &#x27;xiaobai@qq.com&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(v1)</span><br><span class="line">v2 = data.rsplit(<span class="string">&#x27;|&#x27;</span>, <span class="number">1</span>)  <span class="comment"># [&#x27;小白|root&#x27;, &#x27;xiaobai@qq.com&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(v2)</span><br></pre></td></tr></table></figure><p>应用场景</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">file_path = <span class="string">&quot;XXX/XXXX/XX.XX/XXX.mp4&quot;</span></span><br><span class="line"></span><br><span class="line">data_list = file_path.rsplit(<span class="string">&#x27;.&#x27;</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">data = data_list[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure></li><li><p>字符串的拼接，得到一个新的字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data_list = [<span class="string">&quot;小白&quot;</span>, <span class="string">&quot;是&quot;</span>, <span class="string">&quot;大帅锅&quot;</span>]</span><br><span class="line">v1 = <span class="string">&quot;_&quot;</span>.join(data_list)  <span class="comment"># 小白_是_大帅锅</span></span><br><span class="line"><span class="built_in">print</span>(v1)</span><br></pre></td></tr></table></figure></li><li><p>格式化字符串，得到新的字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;&#123;0&#125;喜欢干很多行业，例如：&#123;1&#125;、&#123;2&#125;等&quot;</span></span><br><span class="line">data = name.<span class="built_in">format</span>(<span class="string">&quot;老王&quot;</span>, <span class="string">&quot;护士&quot;</span>, <span class="string">&quot;嫩模&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(name)  <span class="comment"># &#123;0&#125;喜欢干很多行业，例如：&#123;1&#125;、&#123;2&#125;等</span></span><br><span class="line"><span class="built_in">print</span>(data)  <span class="comment"># 老王喜欢干很多行业，例如：护士、嫩模等</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;&#123;&#125;喜欢干很多行业，例如：&#123;&#125;、&#123;&#125;等&quot;</span></span><br><span class="line">data = name.<span class="built_in">format</span>(<span class="string">&quot;老王&quot;</span>, <span class="string">&quot;护士&quot;</span>, <span class="string">&quot;嫩模&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(name)  <span class="comment"># &#123;&#125;喜欢干很多行业，例如：&#123;&#125;、&#123;&#125;等</span></span><br><span class="line"><span class="built_in">print</span>(data)  <span class="comment"># 老王喜欢干很多行业，例如：护士、嫩模等</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;&#123;name&#125;喜欢干很多行业，例如：&#123;h1&#125;、&#123;h2&#125;等&quot;</span></span><br><span class="line">data = name.<span class="built_in">format</span>(name=<span class="string">&quot;老王&quot;</span>, h1=<span class="string">&quot;护士&quot;</span>, h2=<span class="string">&quot;嫩模&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(name)  <span class="comment"># &#123;name&#125;喜欢干很多行业，例如：&#123;h1&#125;、&#123;h2&#125;等</span></span><br><span class="line"><span class="built_in">print</span>(data)  <span class="comment"># 老王喜欢干很多行业，例如：护士、嫩模等</span></span><br></pre></td></tr></table></figure></li><li><p>字符串转换为字节类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&quot;嫂子&quot;</span></span><br><span class="line"></span><br><span class="line">v1 = data.encode(<span class="string">&quot;utf-8&quot;</span>)  <span class="comment"># utf-8,字节类型</span></span><br><span class="line">v2 = data.encode(<span class="string">&quot;gbk&quot;</span>)  <span class="comment"># gbk,字节类型</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(v1)  <span class="comment"># b&#x27;\xe5\xab\x82\xe5\xad\x90&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(v2)  <span class="comment"># b&#x27;\xc9\xa9\xd7\xd3&#x27;</span></span><br><span class="line"></span><br><span class="line">a1 = v1.decode(<span class="string">&quot;utf-8&quot;</span>)  <span class="comment"># 嫂子</span></span><br><span class="line">a2 = v2.decode(<span class="string">&quot;gbk&quot;</span>)  <span class="comment"># 嫂子</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a1)</span><br><span class="line"><span class="built_in">print</span>(a2)</span><br></pre></td></tr></table></figure></li><li><p>将字符串内容居中、居左、居右展示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="string">&quot;小白i&quot;</span></span><br><span class="line"></span><br><span class="line">data = v1.center(<span class="number">21</span>, <span class="string">&quot;*&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(data)  <span class="comment"># *********小白i*********</span></span><br><span class="line"></span><br><span class="line">data = v1.ljust(<span class="number">21</span>, <span class="string">&quot;*&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(data)  <span class="comment"># 小白i******************</span></span><br><span class="line"> </span><br><span class="line">data = v1.rjust(<span class="number">21</span>, <span class="string">&quot;*&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(data)  <span class="comment"># ******************小白i</span></span><br></pre></td></tr></table></figure></li><li><p>自动帮助你填充0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&quot;小白&quot;</span></span><br><span class="line">v1 = data.zfill(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(v1)  <span class="comment"># 00000000小白</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用场景：处理二进制数据</span></span><br><span class="line">data = <span class="string">&quot;101&quot;</span></span><br><span class="line">v1 = data.zfill(<span class="number">8</span>)</span><br><span class="line"><span class="built_in">print</span>(v1)  <span class="comment"># 00000101</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="3-2-1练习题"><a href="#3-2-1练习题" class="headerlink" title="3.2.1练习题"></a>3.2.1练习题</h4><ol><li><p>写代码实现判断用户输入的值是否以 “ai” 开头，如果是则输出 “是的” 否则输出 “不是的”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">massage = <span class="built_in">input</span>(<span class="string">&quot;请输入一个值：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> massage.startswith(<span class="string">&quot;ai&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;是的&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不是的&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>写代码实现判断用户输入的值是否以 “NB” 结尾，如果是则输出 “是的” 否则输出 “不是的”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">result = <span class="built_in">input</span>(<span class="string">&quot;请输入一个值：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> result.endswith(<span class="string">&quot;NB&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;是的&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不是的&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>将 name 变量对应的值中的 所有的 “|” 替换为 “p” ，并输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;xiao|bai|shi|da|shuai|guo&quot;</span></span><br><span class="line">result = name.replace(<span class="string">&quot;|&quot;</span>, <span class="string">&quot;p&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure></li><li><p>写代码实现对用户输入的值判断，是否为整数，如果是则转换为整型并输出，否则直接输出 “请输入数字”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="built_in">input</span>(<span class="string">&quot;请输入一个值：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> v1.isdecimal():</span><br><span class="line">    data = <span class="built_in">int</span>(v1)</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请输入数字&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>对用户输入的数据使用 “+” 切割，判断输入的值是否都是数字？</p><p>提示：用户输入的格式必须是以 “+” 连接的格式，如 5+9，xiaobai+999</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="built_in">input</span>(<span class="string">&quot;请输入内容：&quot;</span>)</span><br><span class="line">v1 = data.split(<span class="string">&quot;+&quot;</span>)</span><br><span class="line">a1 = v1[<span class="number">0</span>]</span><br><span class="line">a2 = v1[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">if</span> a1.isdecimal() <span class="keyword">and</span> a2.isdecimal():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;正确&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;错误&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>写代码实现一个整数加法计算器（两个数相加）</p><p>需求：提示用户输入：5+9或5+9或5+9，计算出两个值的和（提示：先分割再转换为整型，再相加）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="built_in">input</span>(<span class="string">&quot;请输入内容：&quot;</span>)</span><br><span class="line">num_list = data.split(<span class="string">&quot;+&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> num_list[<span class="number">0</span>].isdecimal() <span class="keyword">and</span> num_list[<span class="number">1</span>].isdecimal():</span><br><span class="line">    v1 = <span class="built_in">int</span>(num_list[<span class="number">0</span>])</span><br><span class="line">    v2 = <span class="built_in">int</span>(num_list[<span class="number">1</span>])</span><br><span class="line">    result = v1 + v2</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入错误&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>写代码实现一个整数加法计算器（两个数相加）</p><p>需求：提示用户输入：5 + 9或5 + 9或5 + 9，计算出两个值的和（提示：先分割再去除空白，再转换为整型，再相加）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="built_in">input</span>(<span class="string">&quot;请输入内容：&quot;</span>)</span><br><span class="line">num_list = data.split(<span class="string">&quot;+&quot;</span>)</span><br><span class="line">v1 = <span class="built_in">int</span>(num_list[<span class="number">0</span>].strip())</span><br><span class="line">v2 = <span class="built_in">int</span>(num_list[<span class="number">1</span>].strip())</span><br><span class="line">result = v1 + v2</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure></li><li><p>补充代码实现用户认证</p><p>需求：提示用户输入手机号、验证码、全部都验证通过才算登录成功（验证码不区分大小写）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">code = random.randrange(<span class="number">1000</span>, <span class="number">9999</span>)  <span class="comment"># 生成动态验证码</span></span><br><span class="line">code = <span class="built_in">str</span>(code)</span><br><span class="line">msg = <span class="string">&quot;欢迎登录python系统，您的验证码为：&#123;&#125;，手机号为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(code, <span class="string">&quot;15849790940&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(msg)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">code = random.randrange(<span class="number">1000</span>, <span class="number">9999</span>)  <span class="comment"># 生成动态验证码</span></span><br><span class="line">code = <span class="built_in">str</span>(code)</span><br><span class="line">msg = <span class="string">&quot;欢迎登录python系统，您的验证码为：&#123;&#125;，手机号为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(code, <span class="string">&quot;15849790940&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(msg)</span><br><span class="line"></span><br><span class="line">phone = <span class="built_in">input</span>(<span class="string">&quot;请输入手机号：&quot;</span>)</span><br><span class="line">data = <span class="built_in">input</span>(<span class="string">&quot;请输入验证码：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> code.upper == data.upper <span class="keyword">and</span> phone == <span class="string">&quot;15849790940&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;登陆成功&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;验证码或手机号错误&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>补充代码实现数据拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data_list = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    hobby = <span class="built_in">input</span>(<span class="string">&quot;请输入您的爱好（Q/q退出）：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> hobby.upper() == <span class="string">&quot;Q&quot;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 把输入的值添加到 data_list 中，如：data_list = [&quot;  &quot;, &quot;  &quot;]</span></span><br><span class="line">    data_list.append(hobby)</span><br><span class="line">    <span class="comment"># 将所有的爱好通过符号 “、” 拼接起来并输出</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">data_list = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    hobby = <span class="built_in">input</span>(<span class="string">&quot;请输入您的爱好（Q/q退出）：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> hobby.upper() == <span class="string">&quot;Q&quot;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 把输入的值添加到 data_list 中，如：data_list = [&quot;  &quot;, &quot;  &quot;]</span></span><br><span class="line">    data_list.append(hobby)</span><br><span class="line">    <span class="comment"># 将所有的爱好通过符号 “、” 拼接起来并输出</span></span><br><span class="line">result = <span class="string">&quot;、&quot;</span>.join(data_list)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-3公共功能"><a href="#3-3公共功能" class="headerlink" title="3.3公共功能"></a>3.3公共功能</h3><ol><li><p>相加：字符串 + 字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="string">&quot;xiaobai&quot;</span> + <span class="string">&quot;bai&quot;</span></span><br><span class="line"><span class="built_in">print</span>(v1)</span><br></pre></td></tr></table></figure></li><li><p>相乘：字符串 * 整数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&quot;小白&quot;</span> * <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(data)  <span class="comment"># 小白小白小白</span></span><br></pre></td></tr></table></figure></li><li><p>长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&quot;小白是大帅锅&quot;</span></span><br><span class="line">value = <span class="built_in">len</span>(data)</span><br><span class="line"><span class="built_in">print</span>(value)  <span class="comment"># 6</span></span><br></pre></td></tr></table></figure></li><li><p>获取字符串中的字符，索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(message[<span class="number">0</span>])  <span class="comment"># 来</span></span><br><span class="line"><span class="built_in">print</span>(message[<span class="number">1</span>])  <span class="comment"># 做</span></span><br><span class="line"><span class="built_in">print</span>(message[<span class="number">2</span>])  <span class="comment"># 点</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(message[-<span class="number">1</span>])  <span class="comment"># 呀</span></span><br><span class="line"><span class="built_in">print</span>(message[-<span class="number">2</span>])  <span class="comment"># 易</span></span><br><span class="line"><span class="built_in">print</span>(message[-<span class="number">3</span>])  <span class="comment"># 交</span></span><br></pre></td></tr></table></figure><p>注意：字符串能通过索引取值，无法修改值。【字符串在内部存储时不允许对内部元素修改，想修改只能重新创建】</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> index &lt; <span class="built_in">len</span>(message):</span><br><span class="line">    value = message[index]</span><br><span class="line">    <span class="built_in">print</span>(value)</span><br><span class="line">    index += <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line">index = <span class="built_in">len</span>(message) - <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> index &gt;= <span class="number">0</span>:</span><br><span class="line">    value = message[index]</span><br><span class="line">    <span class="built_in">print</span>(value)</span><br><span class="line">    index -= <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>获取字符串中的子序列，切片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(message[<span class="number">0</span>:<span class="number">2</span>])  <span class="comment"># 来做</span></span><br><span class="line"><span class="built_in">print</span>(message[<span class="number">3</span>:<span class="number">7</span>])  <span class="comment"># py交易</span></span><br><span class="line"><span class="built_in">print</span>(message[<span class="number">3</span>:])  <span class="comment"># py交易呀</span></span><br><span class="line"><span class="built_in">print</span>(message[:<span class="number">5</span>])  <span class="comment"># 来做点py</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(message[<span class="number">4</span>:-<span class="number">1</span>])  <span class="comment"># y交易</span></span><br><span class="line"><span class="built_in">print</span>(message[<span class="number">4</span>:-<span class="number">1</span>])  <span class="comment"># y交</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(message[<span class="number">4</span>:<span class="built_in">len</span>(message)])  <span class="comment"># y交易呀</span></span><br></pre></td></tr></table></figure><p>注意：字符串中的切片只能读取数据，无法修改数据。【字符串在内部存储时不允许对内部元素修改，想修改只能重新创建】</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line"></span><br><span class="line">value = message[:<span class="number">3</span>] + <span class="string">&quot;python&quot;</span> + messaege[<span class="number">5</span>:]</span><br><span class="line"><span class="built_in">print</span>(value)</span><br></pre></td></tr></table></figure><ol start="6"><li><p>步长，跳着取字符串中的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;生活不是电影，生活比电影苦&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(name[<span class="number">0</span>:<span class="number">5</span>:<span class="number">2</span>])  <span class="comment"># 生不电  [前两个值表示区间范围，最后一个值表示步长]</span></span><br><span class="line"><span class="built_in">print</span>(name[:<span class="number">8</span>:<span class="number">2</span>])  <span class="comment"># 生不电，</span></span><br><span class="line"><span class="built_in">print</span>(name[<span class="number">2</span>::<span class="number">3</span>])  <span class="comment"># 不影活影</span></span><br><span class="line"><span class="built_in">print</span>(name[::<span class="number">2</span>])  <span class="comment"># 生不电，活电苦  [区间范围不写表示整个字符串]</span></span><br><span class="line"><span class="built_in">print</span>(name[<span class="number">8</span>:<span class="number">1</span>:-<span class="number">1</span>])  <span class="comment"># 活生，影电是不  [倒序]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;生活不是电影，生活比电影苦&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(name[<span class="number">8</span>:<span class="number">1</span>:-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(name[-<span class="number">1</span>:<span class="number">1</span>:-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 面试题  做字符串的反转</span></span><br><span class="line">value = name[::-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(value)</span><br></pre></td></tr></table></figure></li><li><p>循环</p><ul><li><p>while循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> index &lt; <span class="built_in">len</span>(message):</span><br><span class="line">    value = message[index]</span><br><span class="line">    <span class="built_in">print</span>(value)</span><br><span class="line">    index += <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>for循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> message:</span><br><span class="line">    <span class="built_in">print</span>(char)</span><br></pre></td></tr></table></figure></li><li><p>range，帮助我们创建一系列的数字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">range</span>(<span class="number">10</span>)  <span class="comment"># [0,1,2,3,4,5,6,7,8,9]</span></span><br><span class="line"><span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>)  <span class="comment"># [1,2,3,4,5,6,7,8,9]</span></span><br><span class="line"><span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>)  <span class="comment"># [1,3,5,7,9]</span></span><br><span class="line"><span class="built_in">range</span>(<span class="number">10</span>,<span class="number">1</span>,-<span class="number">1</span>)  <span class="comment"># [10,9,8,7,6,5,4,3,2]</span></span><br></pre></td></tr></table></figure></li><li><p>for + range</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(message[i])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(message)):</span><br><span class="line">    <span class="built_in">print</span>(message[i])</span><br></pre></td></tr></table></figure></li></ul><p>一般应用场景：</p><ul><li><p>while，一般用在无限制（未知）循环次数时使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用户输入一个值，如果不是整数则一直输入，直到是整数才结束</span></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    data = <span class="built_in">input</span>(<span class="string">&quot;请输入内容：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> data.isdecimal():</span><br><span class="line">        num = <span class="built_in">int</span>(data)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;输入错误，请重新输入：&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>for循环，一般应用再已知的循环数量的场景中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> message:</span><br><span class="line">    <span class="built_in">print</span>(char)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(message[i])</span><br></pre></td></tr></table></figure></li><li><p>continue和break关键字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> message:</span><br><span class="line">    <span class="keyword">if</span> char == <span class="string">&quot;p&quot;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(char)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;来做点py交易呀&quot;</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> message:</span><br><span class="line">    <span class="keyword">if</span> char == <span class="string">&quot;p&quot;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(char)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        <span class="built_in">print</span>(j)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="3-4转换"><a href="#3-4转换" class="headerlink" title="3.4转换"></a>3.4转换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">999</span></span><br><span class="line">data = <span class="built_in">str</span>(num)</span><br><span class="line"><span class="built_in">print</span>(data)  <span class="comment"># &quot;999&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data_list = [<span class="string">&quot;xiao&quot;</span>, <span class="string">&quot;bai&quot;</span>, <span class="number">111</span>]</span><br><span class="line">data = <span class="built_in">str</span>(data_list)</span><br><span class="line"><span class="built_in">print</span>(data)  <span class="comment"># &quot;[&quot;xiao&quot;, &quot;bai&quot;, 111]&quot;</span></span><br></pre></td></tr></table></figure><p>一般情况下，只有整型转字符串才有意义</p><h3 id="3-5其他"><a href="#3-5其他" class="headerlink" title="3.5其他"></a>3.5其他</h3><p>字符串不可以被修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;小白&quot;</span></span><br><span class="line"></span><br><span class="line">name[<span class="number">0</span>]</span><br><span class="line">name[<span class="number">1</span>:<span class="number">3</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name_list = [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>]</span><br><span class="line"></span><br><span class="line">name_list[<span class="number">0</span>]</span><br><span class="line">name_list[<span class="number">0</span>] = <span class="number">666</span>  <span class="comment"># 列表可以修改</span></span><br></pre></td></tr></table></figure><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ol><li><p>用代码实现进制转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="number">675</span></span><br><span class="line"></span><br><span class="line">v2 = <span class="string">&quot;0b11000101&quot;</span></span><br><span class="line"></span><br><span class="line">v3 = <span class="string">&quot;11000101&quot;</span></span><br><span class="line"></span><br><span class="line">v1 = <span class="number">675</span>  <span class="comment"># 将 v1 转换为二进制</span></span><br><span class="line">data = <span class="built_in">bin</span>(v1)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">v2 = <span class="string">&quot;0b11000101&quot;</span></span><br><span class="line">value = <span class="built_in">int</span>(v2, base=<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(value)</span><br><span class="line"></span><br><span class="line">v3 = <span class="string">&quot;11000101&quot;</span></span><br><span class="line">message = <span class="built_in">int</span>(v3, base=<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure></li><li><p>按要求实现</p><p>现有 v1&#x3D;123 和 v2&#x3D;456，请将这两个值转换为二进制，并将其二进制的前缀 0b 去掉，然后将两个二进制拼接起来，最终再转换为整型（十进制）</p><p>例如：</p><p>123 对应二进制为 “0b1111011”，去除前缀的二进制为：”1111011”，</p><p>456 对应二进制为 “0b11100100”，去除前缀的二进制为：”11100100”，</p><p>将两个二进制拼接起来的值为：”111101111100100”，在将此值转换为整型为：31716</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="number">123</span></span><br><span class="line">v2 = <span class="number">456</span></span><br><span class="line">data = <span class="built_in">bin</span>(v1).lstrip(<span class="string">&quot;0b&quot;</span>)</span><br><span class="line">value = <span class="built_in">bin</span>(v2).lstrip(<span class="string">&quot;0b&quot;</span>)</span><br><span class="line">message = data + value</span><br><span class="line">message = <span class="built_in">int</span>(message, base=<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure></li><li><p>按要求实现</p><p>现有 v1&#x3D;123 和 v2&#x3D;456，请将这两个值转换为二进制，并将其二进制的前缀 0b 去掉，再补足为两个字节（16位），然后将两个二进制拼接起来，最终再转换为整型（十进制）</p><p>例如：</p><p>123 对应二进制为 “0b1111011”，去除前缀的二进制为：”1111011”，补足十六位为 “0000000001111011”</p><p>456 对应二进制为 “0b11100100”，去除前缀的二进制为：”11100100”，补足十六位为 “0000000001111011”</p><p>将两个二进制拼接起来的值为：”00000000011110110000000001111011”，在将此值转换为整型为：8061156</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="number">123</span></span><br><span class="line">v2 = <span class="number">456</span></span><br><span class="line">data = <span class="built_in">bin</span>(v1).lstrip(<span class="string">&quot;0b&quot;</span>).zfill(<span class="number">16</span>)</span><br><span class="line">value = <span class="built_in">bin</span>(v2).lstrip(<span class="string">&quot;0b&quot;</span>).zfill(<span class="number">16</span>)</span><br><span class="line"><span class="built_in">print</span>(value)</span><br><span class="line">message = data + value</span><br><span class="line">message = <span class="built_in">int</span>(message, base=<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure></li><li><p>列举你了解的那些数据类型的值转换为布尔值为False</p></li><li><p>看代码写结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">&quot;&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">123</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">456</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">999</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">666</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">&quot;小白&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">345</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">110</span>)</span><br></pre></td></tr></table></figure></li><li><p>让用户输入一段文本，事先将文本中的敏感词 苍老师 替换为 *** ，最后并输出替换后的文本</p></li><li><p>有变量name &#x3D; “aleX leNb “完成如下操作：</p><ul><li>移除 name 变量对应的值两边的空格，并输出处理结果</li><li>判断 name 变量是否以 “al” 开头，并输出结果（用切片 或 startswith实现）</li><li>判断 name 变量是否以 “Nb” 结尾，并输出结果（用切片 或 endswith实现）</li><li>将 name 变量对应的值中的所有 “l” 替换为 “p”，并输出结果</li><li>将 name 变量对应的值根据所有的 “l” 分割，并输出结果</li><li>将 name 变量对应的值根据第一个 “l” 分割，并输出结果</li><li>将 name 变量对应的值变大写，并输出结果</li><li>将 name 变量对应的值变小写，并输出结果</li></ul></li><li><p>如何实现字符串的翻转</p></li><li><p>有字符串 s &#x3D; “123a4b5c”</p><ul><li><p>通过对s切片形成新的字符串 “123”</p></li><li><p>通过对s切片形成新的字符串 “a4b”</p></li><li><p>通过对s切片形成字符串 “c”</p></li><li><p>通过对s切片形成字符串 “ba2”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">message = input(&quot;请输入一段文本：&quot;)</span></span><br><span class="line"><span class="string">message = message.replace(&quot;苍老师&quot;, &quot;***&quot;)</span></span><br><span class="line"><span class="string">print(message)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">name = &quot;aleX leNb &quot;</span></span><br><span class="line"><span class="string">name = name.strip()</span></span><br><span class="line"><span class="string">print(name)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if name[0:2] == &quot;al&quot;:</span></span><br><span class="line"><span class="string">    print(True)</span></span><br><span class="line"><span class="string">else:</span></span><br><span class="line"><span class="string">    print(False)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">name = name.startswith(&quot;al&quot;)</span></span><br><span class="line"><span class="string">print(name)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">name = name.split(&quot;l&quot;, 1)</span></span><br><span class="line"><span class="string">print(name)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">name = name[::-1]</span></span><br><span class="line"><span class="string">print(name)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">s = &quot;123a4b5c&quot;</span></span><br><span class="line"><span class="string">s = s[-1]</span></span><br><span class="line"><span class="string">print(s)</span></span><br><span class="line"><span class="string">s = s[-3::-2]</span></span><br><span class="line"><span class="string">print(s)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用while循环实现对字符串 message &#x3D; “伤情最是晚凉天，憔悴厮人不堪言” 中每个字符进行输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;伤情最是晚凉天，憔悴厮人不堪言&quot;</span></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> index &lt; <span class="built_in">len</span>(message):</span><br><span class="line">    message1 = message[index]</span><br><span class="line">    <span class="built_in">print</span>(message1)</span><br><span class="line">    index += <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>使用for循环实现对字符串 message &#x3D; “伤情最是晚凉天，憔悴厮人不堪言” 中每个字符进行输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;伤情最是晚凉天，憔悴厮人不堪言&quot;</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> message:</span><br><span class="line">    <span class="built_in">print</span>(char)</span><br></pre></td></tr></table></figure></li><li><p>使用for循环和range实现对字符串 message &#x3D; “伤情最是晚凉天，憔悴厮人不堪言” 中每个字符进行倒序输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;伤情最是晚凉天，憔悴厮人不堪言&quot;</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(message)):</span><br><span class="line">    data = message[index]</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line">    </span><br><span class="line">message = <span class="string">&quot;伤情最是晚凉天，憔悴厮人不堪言&quot;</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(message)-<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">    <span class="built_in">print</span>(message[index])</span><br></pre></td></tr></table></figure></li><li><p>使用for循环实现输出倒计时效果，例如：输出内容依次是：”倒计时3秒”，”倒计时2秒”，”倒计时1秒”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for num in range(3, 0, -1):</span></span><br><span class="line"><span class="comment">#     data = &quot;倒计时&#123;&#125;秒&quot;.format(num)</span></span><br><span class="line"><span class="comment">#     print(data)</span></span><br></pre></td></tr></table></figure></li><li><p>让用户输入一段文本，请计算文中 “浪” 出现的次数，并输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># text = input(&quot;请输入一段文本：&quot;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># count = 0</span></span><br><span class="line"><span class="comment"># for item in text:</span></span><br><span class="line"><span class="comment">#     if item == &quot;浪&quot;:</span></span><br><span class="line"><span class="comment">#         count += 1</span></span><br><span class="line"><span class="comment">#     else:</span></span><br><span class="line"><span class="comment">#         pass</span></span><br><span class="line"><span class="comment"># print(count)</span></span><br></pre></td></tr></table></figure></li><li><p>获取用户两次输入的内容，并提取其中的数字，然后实现数字的相加（转换为整型再相加）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">要求：</span></span><br><span class="line"><span class="string">将num1中的所有数字找到并拼接起来</span></span><br><span class="line"><span class="string">将num2中的所有数字找到并拼接起来</span></span><br><span class="line"><span class="string">然后将两个数字进行相加</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">num1 = <span class="built_in">input</span>(<span class="string">&quot;请输入：&quot;</span>)</span><br><span class="line">data_list = []</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> num1:</span><br><span class="line">    <span class="keyword">if</span> item.isdecimal():</span><br><span class="line">        data_list.append(item)</span><br><span class="line">data = <span class="string">&quot;&quot;</span>.join(data_list)</span><br><span class="line"></span><br><span class="line">num2 = <span class="built_in">input</span>(<span class="string">&quot;请输入：&quot;</span>)</span><br><span class="line">data1_list = []</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> num2:</span><br><span class="line">    <span class="keyword">if</span> item.isdecimal():</span><br><span class="line">        data1_list.append(item)</span><br><span class="line">data1 = <span class="string">&quot;&quot;</span>.join(data1_list)</span><br><span class="line"></span><br><span class="line">result = <span class="built_in">int</span>(data) + <span class="built_in">int</span>(data1)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">num1 = <span class="built_in">input</span>(<span class="string">&quot;请输入：&quot;</span>)</span><br><span class="line">data = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> num1:</span><br><span class="line">    <span class="keyword">if</span> item.isdecimal():</span><br><span class="line">        data += item</span><br><span class="line">num2 = <span class="built_in">input</span>(<span class="string">&quot;请输入：&quot;</span>)</span><br><span class="line">data1 = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> num2:</span><br><span class="line">    <span class="keyword">if</span> item.isdecimal():</span><br><span class="line">        data1 += item</span><br><span class="line"></span><br><span class="line">result = <span class="built_in">int</span>(data) + <span class="built_in">int</span>(data1)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> java笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序01</title>
      <link href="/2023/01/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F01/"/>
      <url>/2023/01/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F01/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序01"><a href="#微信小程序01" class="headerlink" title="微信小程序01"></a>微信小程序01</h1><h2 id="1-小程序简介"><a href="#1-小程序简介" class="headerlink" title="1.小程序简介"></a>1.小程序简介</h2><p>小程序与普通网页开发的区别：</p><ol><li><p>运行环境不同</p><p>网页运行在浏览器环境中</p><p>小程序运行在微信环境中</p></li><li><p>API不同</p><p>由于运行环境的不同，所以小程序中，无法调用DOM和BOM的API。但是，小程序中可以调用微信环境提供的各种API，例如：</p><ul><li>地理定位</li><li>扫码</li><li>支付</li></ul></li><li><p>开发模式不同</p><p>网页的开发模式：浏览器+代码编辑器</p><p>小程序有自己的一套标准开发模式：</p><ul><li>申请小程序开发账号</li><li>安装小程序开发者工具</li><li>创建和配置小程序项目</li></ul></li></ol><h2 id="2-第一个小程序"><a href="#2-第一个小程序" class="headerlink" title="2.第一个小程序"></a>2.第一个小程序</h2><ol><li><p>注册小程序开发账号</p><p>使用浏览器打开<a href="https://mp.weixin.qq.com/%E7%BD%91%E5%9D%80%EF%BC%8C%E7%82%B9%E5%87%BB%E5%8F%B3%E4%B8%8A%E8%A7%92%E7%9A%84">https://mp.weixin.qq.com/网址，点击右上角的</a> “立即注册” 即可进入到小程序开发账号的注册流程</p></li><li><p>选择注册账号的类型</p></li><li><p>填写账号信息</p></li></ol><p>接下来就是完成身份验证，即可完成小程序的注册</p><ol start="4"><li><p>获取小程序的AppID</p></li><li><p>了解微信开发者工具</p><p>微信开发者工具是官方推荐使用的小程序开发工具，他提供的主要功能如下：</p><ul><li>快速创建小程序项目</li><li>代码的查看和编辑</li><li>对小程序功能进行调试</li><li>小程序的预览和发布</li></ul></li><li><p>下载开发者工具</p><p>推荐下载和安装最新的稳定版的微信开发者工具，下载页面的链接如下：</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/stable.html">https://developers.weixin.qq.com/miniprogram/dev/devtools/stable.html</a></p></li></ol><p>然后扫码登陆即可</p><ol start="7"><li>创建小程序项目</li></ol><h2 id="3-小程序代码构成"><a href="#3-小程序代码构成" class="headerlink" title="3.小程序代码构成"></a>3.小程序代码构成</h2><ol><li><p>了解项目的基本组成结构</p></li><li><p>小程序页面的组成部分</p><p>小程序官方建议把所有小程序的页面，都存放在 pages 目录中，以单独的文件夹存在。其中，每个页面由4个基本文件组成。</p><ul><li>.js文件（页面的脚本文件，存放页面的数据，事件处理函数等）</li><li>.json文件（当前页面的配置文件，配置窗口的外观、表现等）</li><li>.wxml文件（页面的模板结构文件）</li><li>.wxss文件（当前页面的样式表文件）</li></ul></li><li><p>json配置文件的作用</p><p>json是一种数据格式，在实际开发中，json总是以配置文件的形式出现，小程序项目中也不例外：通过不同的.json配置文件，可以对小程序项目进行不同级别的配置。</p><p>小程序项目中有4种json配置文件，分别是：</p><ul><li>项目根目录中的app.json配置文件</li><li>项目根目录中的project.config.json配置文件</li><li>项目根目录中的sitemap.json配置文件</li><li>每个页面文件夹中的.json配置文件</li></ul></li><li><p>app.json文件</p><p>app.json是当前小程序的全局配置，包括了小程序的所有页面路径、窗口外观、界面表现、底部tab等。</p><p>Demo项目里边的app.json配饰内容如下：</p><ul><li>pages：用来记录当前小程序所有页面的路径</li><li>window：全局定义小程序所有页面的背景色、文字颜色等</li><li>style：全局定义小程序组件所使用的样式版本</li><li>sitemapLocation：用来指明sitemap.json的位置</li></ul></li><li><p>project.config.json文件</p><p>project.config.json是项目配置文件，用来记录我们对小程序开发工具所做的个性化配置，例如：</p><ul><li>setting中保存了编译相关的配置</li><li>projectname中保存的是项目名称</li><li>appid中保存的是小程序的账号ID</li></ul></li><li><p>sitemap.json文件</p><p>微信以开放小程序内搜索，效果类似于PC网页的SEO。sitemap.json文件用来配置小程序页面是否允许微信索引。</p><p>当开发者允许微信索引时，微信会通过爬虫的形式，为小程序的页面内容建立索引，当用户的搜索关键字和页面的索引匹配成功的时候，小程序的页面将可能展示在搜索结果中。</p></li><li><p>页面的.json配置文件</p><p>小程序中的每一个页面，可以使用.json文件来对本页面的窗口外观进行配置，页面中的配置项会覆盖app.json的window中相同的配置项。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;usingComponents&quot;</span>: &#123;&#125;,</span><br><span class="line">  <span class="string">&quot;navigationBarBackgroundColor&quot;</span>: <span class="string">&quot;#00b26a&quot;</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新建小程序页面</p><p>只需要在app.json -&gt;pages中新增页面的存放路径，小程序开发者工具即可帮助我们自动创建对应的页面文件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;pages&quot;</span>:[</span><br><span class="line">    <span class="string">&quot;pages/index/index&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pages/logs/logs&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pages/list/list&quot;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>修改项目首页</p><p>只需要调整app.json -&gt; pages数组中页面路径的前后顺序，即可修改项目的首页。小程序会把排在第一位的页面，当作项目首页进行渲染。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;pages&quot;</span>:[</span><br><span class="line">    <span class="string">&quot;pages/list/list&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pages/index/index&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pages/logs/logs&quot;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>什么是WXML</p><p>WXML（WeiXin Markup Language）是小程序框架设计的一套标签语言，用来构建小程序页面的结构，起作用类似于网页开发中的HTML</p><p>WXML和HTML的区别：</p><ul><li><p>标签名称不同</p><p>HTML（div, span, img, a）</p><p>WXML（view, text, image, navigator）</p></li><li><p>属性节点不同</p><p><a herf="#">超链接<a></p><p><navigator url='/pages/home/home'></navigator></p></li><li><p>提供了类似与Vue中的模板语法</p><p>数据绑定</p><p>列表渲染</p><p>条件渲染</p></li></ul></li><li><p>什么是WXSS</p><p>WXSS（WeiXin Style Sheets）是一套样式语言，用于描述WXML的组件样式，类似于网页开发中的CSS。</p><p>WXSS和CSS的区别：</p><ul><li><p>新增了rpx尺寸单位</p><p>CSS中需要手动的进行像素单位换算，例如：rem</p><p>WXSS在底层支持新的尺寸单位rpx，在不同大小的屏幕上小程序会自动进行换算</p></li><li><p>提供了全局样式和局部样式</p><p>项目根目录中的app.wxss会作用与所有小程序界面</p><p>局部页面的.wxss样式仅对当前页面生效</p></li><li><p>WXSS仅支持部分CSS选择器</p><p>.class和#id</p><p>element</p><p>并集选择器、后代选择器</p><p>::after和::before等伪类选择器</p></li></ul></li><li><p>小程序中的.js文件</p><p>一个项目中仅仅提供界面展示是不够的，在小程序中，我们通过.js文件来处理用户的操作。例如：响应用户的点击、获取用户的位置等等。</p><p>小程序中.js文件的分类，分为三大类：</p><ul><li><p>app.js</p><p>是整个小程序项目的入口文件，通过调用app()函数来启动整个小程序</p></li><li><p>页面的.js文件</p><p>是页面的入口文件，通过调用Page()函数来创建并运行界面</p></li><li><p>普通的.js文件</p><p>是普通的功能模块文件，用来封装公共的函数或属性供页面使用</p></li></ul></li></ol><h2 id="4-小程序的宿主环境"><a href="#4-小程序的宿主环境" class="headerlink" title="4.小程序的宿主环境"></a>4.小程序的宿主环境</h2><ol><li><p>什么是宿主环境</p><p>宿主环境（host environment）指的是程序运行所必须的依赖环境，例如：</p><p>Android系统和IOS系统是两个不同的宿主环境。安卓版的微信App是不能在IOS环境中运行的，所以，Android是安卓软件的宿主环境，脱离了宿主环境的软件是没有任何意义的。</p><p>手机微信是小程序的宿主环境，小程序借助宿主环境提供的能力，可以完成许多普通网页无法完成的功能，例如：</p><p>微信扫码、微信支付、微信登录…</p></li><li><p>小程序宿主环境包含的内容</p><ul><li><p>通信模型</p><p>小程序中通信的主体是渲染层和逻辑层，其中：</p><p>WXML模板和WXSS样式工作在渲染层</p><p>JS脚本工作在逻辑层</p><p>渲染层和逻辑层之间的通信是由微信客户端进行转发的</p><p>逻辑层和第三方服务器之间的通信是由微信客户端进行转发的</p></li><li><p>运行机制</p><p>小程序的启动过程</p><ul><li>把小程序的代码包下载到本地</li><li>解析app.json全局配置文件</li><li>执行app.js小程序入口文件，调用App()创建小程序实例</li><li>渲染小程序首页</li><li>小程序启动完成</li></ul><p>页面的渲染过程</p><ul><li>加载并解析页面的.json配置文件</li><li>加载页面的.wxml模板和.wxss样式</li><li>执行页面的.js文件，调用Page()创建页面示例</li><li>页面渲染完成</li></ul></li><li><p>组件</p><p>小程序的组件也是有宿主环境提供的，开发者可以基于组件快速搭建出漂亮的页面结构，官方把小程序的组件分为9大类：</p><p>视图容器</p><ul><li><p>view</p><p>普通视图区域</p><p>类似于HTML中的div，是一个块级元素</p><p>常用来实现页面的布局效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- list.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span>A<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span>B<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span>C<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* list.wxss */</span></span><br><span class="line"><span class="selector-class">.container1</span> view &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container1</span> view<span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightgreen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container1</span> view<span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightskyblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container1</span> view<span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightpink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container1</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>scroll-view</p><p>可滚动的视图区域</p><p>常用来实现滚动列表效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- list.wxml --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scroll-y 属性：允许纵向滚动 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scroll-x 属性：允许横向滚动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">class</span>=<span class="string">&quot;container1&quot;</span> <span class="attr">scroll-y</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span>A<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span>B<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span>C<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* list.wxss */</span></span><br><span class="line"><span class="selector-class">.container1</span> view &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container1</span> view<span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightgreen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container1</span> view<span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightskyblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container1</span> view<span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightpink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container1</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>swiper和swiper-item</p><p>轮播图容器组件和轮播图item组件</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">默认值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">indicator-dots</td><td align="center">boolean</td><td align="center">false</td><td align="center">是否显示面板指示点</td></tr><tr><td align="center">indicator-color</td><td align="center">color</td><td align="center">rgba(0,0,0,.3)</td><td align="center">指示点颜色</td></tr><tr><td align="center">indicator-active-color</td><td align="center">color</td><td align="center">#000000</td><td align="center">当前选中的指示点颜色</td></tr><tr><td align="center">autoplay</td><td align="center">boolean</td><td align="center">false</td><td align="center">是否自动切换</td></tr><tr><td align="center">interval</td><td align="center">number</td><td align="center">5000</td><td align="center">自动切换时间间隔</td></tr><tr><td align="center">circular</td><td align="center">boolean</td><td align="center">false</td><td align="center">是否采用衔接滑动</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 轮播图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">swiper</span> <span class="attr">class</span>=<span class="string">&quot;swiper-container&quot;</span> <span class="attr">indicator-dots</span> <span class="attr">indicator-color</span>=<span class="string">&quot;white&quot;</span> <span class="attr">indicator-active-color</span>=<span class="string">&quot;gray&quot;</span> <span class="attr">autoplay</span> <span class="attr">interval</span>=<span class="string">&quot;3000&quot;</span> <span class="attr">circular</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 第一个轮播图 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 第二个轮播图 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>B<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 第三个轮播图 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>C<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 轮播图 */</span></span><br><span class="line"><span class="selector-class">.swiper-container</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">swiper-item<span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) <span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightgreen;</span><br><span class="line">&#125;</span><br><span class="line">swiper-item<span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) <span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightskyblue;</span><br><span class="line">&#125;</span><br><span class="line">swiper-item<span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) <span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightpink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>基础内容</p><ul><li><p>text</p><p>文本组件</p><p>类似于HTML中的span标签，是一个行内元素</p><p>通过text组件的selectable属性，实现长按选中文本内容的效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">长按选中效果</span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">selectable</span>&gt;</span>1234567890<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>rich-text</p><p>富文本组件</p><p>支持把HTML字符串渲染成WXML结构</p><p>通过rich-text组件的nodes属性节点，把HTML字符串渲染为对应的UI结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">rich-text</span> <span class="attr">nodes</span>=<span class="string">&quot;&lt;h1 style=&#x27;color: red&#x27;&gt;标题&lt;/h1&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rich-text</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>表单组件</p><p>导航组件</p><p>媒体组件</p><p>map组件</p><p>canvas组件</p><p>开放能力</p><p>无障碍访问</p><p>其他常用组件</p><ul><li><p>button</p><p>按钮组件</p><p>功能比HTML中的button按钮丰富</p><p>通过open-type属性可以调用微信提供的各种功能（客服、转发等）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 通过type属性指定按钮颜色类型 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>普通按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主色调按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;warn&quot;</span>&gt;</span>警号按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- size=&#x27;mini&#x27; 小尺寸按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>普通按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>主色调按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;warn&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>警号按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- plain 镂空按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">plain</span>&gt;</span>普通按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">plain</span>&gt;</span>主色调按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;warn&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">plain</span>&gt;</span>警号按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>image</p><p>图片组件</p><p>image组件默认宽度约300px、高度约240px</p><p>image组件的mode属性用来指定图片的裁剪和缩放模式，常用的mode属性如下：</p><table><thead><tr><th align="center">mode值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">scaleToFill</td><td align="center">(默认值)缩放模式，不保持纵横比缩放图片，使图片的宽高完全拉伸至填满image元素</td></tr><tr><td align="center">aspectFit</td><td align="center">缩放模式，保持纵横比缩放图片，使图片的长边能完全显示出来，也就是说，可以完整的将图片显示出来</td></tr><tr><td align="center">aspectFill</td><td align="center">缩放模式，保持纵横比缩放图片，只保证图片的段边能完全显示出来，也就是说，图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取</td></tr><tr><td align="center">widthFix</td><td align="center">缩放模式，宽度不变，高度自动变换，保持原图宽高比不变</td></tr><tr><td align="center">heightFix</td><td align="center">缩放模式，高度不变，宽度自动变换，保持原图宽高比不变</td></tr></tbody></table></li><li><p>navigator</p><p>页面导航组件</p><p>类似于HTML中的a链接</p></li></ul></li><li><p>API</p><p>小程序的API是由宿主环境提供的，通过这些丰富的小程序API，开发者可以方便的调用微信提供的能力，例如：获取用户信息、本地存储、支付功能等。</p><p>小程序官方把API分为3大类：</p><ul><li><p>事件监听API</p><p>特点：以on开头，用来监听某些事件的触发</p><p>举例：wx.onWindowResize(function callback)监听窗口尺寸变化的事件</p></li><li><p>同步API</p><p>特点：以Sync结尾的API都是同步的API</p><p>​同步API的执行结果，可以通过函数返回值直接获取，如果执行出错会抛出异常</p><p>举例：wx.setStorageSync(‘key’, ‘value’) 向本地存储中写入内容</p></li><li><p>异步API</p><p>特点：类似于jQuery中的$.ajax(options)函数，需要通过 success、fail、complete接收调用结果</p><p>举例：wx.request()发起网络数据请求，通过success回调函数接收数据</p></li></ul></li></ul></li></ol><h2 id="5-协同工作和发布"><a href="#5-协同工作和发布" class="headerlink" title="5.协同工作和发布"></a>5.协同工作和发布</h2><ol><li><p>了解权限管理需求</p><p>在中大型公司里，人员的分工非常仔细：同一个小程序项目，一般会有不同岗位，不同角色的员工同时参与设计与开发。</p><p>此时出于管理需要，我们迫切需要对不同岗位、不同角色的员工的权限进行边界的划分，使他们能够高效的进行协同工作。</p></li><li><p>小程序的开发流程</p><ul><li>提出需求（产品组）</li><li>设计（设计组）</li><li>开发（开发组）</li><li>体验（产品组、设计组）</li><li>测试（测试组）</li><li>发布（管理者）</li></ul></li><li><p>小程序的版本</p><ul><li>开发版本</li><li>体验版本</li><li>审核中的版本</li><li>线上版本</li></ul></li><li><p>小程序发布上线的整体步骤</p><p>一个小程序的发布上线，一般要经过上传代码 -&gt;提交审核 -&gt;发布这三个步骤。</p><p>上传代码</p><ul><li>点击开发者工具顶部工具栏的“上传”按钮</li><li>填写版本号以及项目备注</li></ul><p>登录小程序管理后台 -&gt; 管理 -&gt; 版本管理 -&gt; 开发版本，即可查看提交上传的版本</p><p>提交审核</p><ul><li>为了保证小程序的质量，以及符合相关的规范，小程序的发布是需要经过腾讯官方审核的</li><li>在开发版本的列表中，点击“提交审核”按钮之后，按照页面填写相关信息，就能把小程序提交到腾讯官方进行审核</li></ul><p>审核通过后，管理员的微信会收到小程序通过审核的通知，此时在审核的列表中，点击“发布”按钮之后，即可把“审核通过”的版本发布为“线上版本”，供所有小程序用户访问和使用</p></li><li><p>基于小程序码进行推广</p><p>相对于普通二维码来说，小程序码的优势如下：</p><ul><li>在样式上更具有辨识度和视觉冲击力</li><li>能够更加清晰地树立小程序的品牌形象</li><li>可以帮助开发者更好地推广小程序</li></ul><p>获取小程序码的5个步骤：</p><p>登录小程序管理后台 -&gt; 设置 -&gt; 基本设置 -&gt; 基本信息 -&gt; 小程序及线下物料下载</p></li><li><p>查看小程序运营数据的两种方式</p><ul><li><p>在“小程序”后台查看</p><p>登录小程序管理后台</p><p>点击侧边栏的“统计”</p><p>点击相应的tab可以看到相关的数据</p></li><li><p>使用“小程序数据助手”查看</p><p>打开微信</p><p>搜索“小程序数据助手”</p><p>查看已发布的小程序相关的数据</p></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> python笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/14/hello-world/"/>
      <url>/2023/01/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
